{"version":3,"sources":["HelloWorld.js","Bomb.js","RouletteGun.js","Accordion.js","App.js","index.js"],"names":["HelloWorld","props","state","who","className","this","onClick","setState","React","Component","Bomb","count","interval","setInterval","clearInterval","displayResult","RouletteGun","handleClick","spinningTheChamber","timeout","setTimeout","randomChamber","Math","ceil","random","chamber","clearTimeout","bulletInChamber","renderDisplay","id","defaultProps","Accordion","activeIndex","handleCurrentSection","sectionIndex","section","index","type","title","content","sections","map","renderSectionContent","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd7b7b60.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class HelloWorld extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      who: \"world!\",\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"HelloWorld\">\n        <h2>Hello World Component</h2>\n        <p>\n          This text is updated using state: Hello,{\" \"}\n          <strong>{this.state.who}</strong>\n        </p>\n        <button\n          className=\"world\"\n          onClick={() => this.setState({ who: \"world!\" })}\n        >\n          world\n        </button>\n        <button\n          className=\"friend\"\n          onClick={() => this.setState({ who: \"friend!\" })}\n        >\n          friend\n        </button>\n        <button\n          className=\"react\"\n          onClick={() => this.setState({ who: \"React!\" })}\n        >\n          React\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Bomb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.setState({\n        count: this.state.count + 1,\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  displayResult() {\n    const { count } = this.state;\n    // when count great than or equal to 8, clear interval\n    // if count is greater than or equal to 8, return BOOM\n    if (count >= 8) {\n      clearInterval(this.interval);\n      return (\n        <strong className=\"boom\">\n          <i>BOOM!!!!!</i>\n        </strong>\n      );\n    }\n    // if count is divisible by 2, then return tick\n    if (count % 2 === 0) {\n      return \"tick\";\n    }\n    // if count is NOT divisible by 2 return tock\n    else {\n      return \"tock\";\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Bomb\">\n        <h2>Bomb Component</h2>\n        <p>{this.displayResult()}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class RouletteGun extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chamber: null,\n      spinningTheChamber: false,\n    };\n  }\n\n  static defaultProps = {\n    bulletInChamber: 8,\n  };\n\n  handleClick = () => {\n    this.setState({\n      spinningTheChamber: true,\n    });\n\n    // creates a timeout, a slight pause before the result is rendered\n    this.timeout = setTimeout(() => {\n      const randomChamber = Math.ceil(Math.random() * 8);\n      // random number is generated and then the state is set again\n\n      this.setState({\n        chamber: randomChamber,\n        spinningTheChamber: false,\n      });\n    }, 2000);\n  };\n\n  componentWillUnmount() {\n    clearTimeout(this.timeout);\n  }\n\n  renderDisplay() {\n    // if spinnning === true, return spinning chamber\n    const { spinningTheChamber, chamber } = this.state;\n    const { bulletInChamber } = this.props;\n    if (spinningTheChamber === false && chamber === null) {\n      //otherwise, render you're safe\n      return \"\";\n    }\n    if (spinningTheChamber === true) {\n      return \"spinning the chamber and pulling the trigger!. . . \";\n    }\n    // if this.state.chamber === bulletinchamber props, return bang\n    if (chamber === bulletInChamber) {\n      return (\n        <strong className=\"bang\">\n          <i>BANG!!!</i>\n        </strong>\n      );\n    }\n    if (chamber !== bulletInChamber) {\n      return \"You're safe. . . This time.\";\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"RouletteGun\">\n        <h2>Roulette Gun Component</h2>\n        <p>{this.renderDisplay()}</p>\n        <button id=\"trigger\" className=\"trigger\" onClick={this.handleClick}>\n          Pull the trigger!\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Accordion extends React.Component {\n  static defaultProps = { sections: [] };\n\n  state = {\n    activeIndex: [],\n  };\n\n  handleCurrentSection = (sectionIndex) => {\n    this.setState({\n      activeIndex: sectionIndex,\n    });\n  };\n\n  // this function shoulder render one list item, not all the list items\n  // when the button is clicked it will call the event handler which will change the set to the index of the clicked button\n  renderSectionContent(section, index, activeIndex) {\n    return (\n      <li className=\"section-name\" key={index}>\n        <button\n          className=\"active\"\n          type=\"button\"\n          onClick={() => this.handleCurrentSection(index)}\n        >\n          {section.title}\n        </button>\n        {/* This will contain a conditional rendering statement that will conditionally render the content if the activeIndex === the index of the list item */}\n        {activeIndex === index && <p>{section.content}</p>}\n      </li>\n    );\n  }\n\n  render() {\n    // use object desctructing to access this.state and this.props\n    const { activeIndex } = this.state;\n    const { sections } = this.props;\n\n    return (\n      // refractor this method to render the buttons list and also render the renderSectionContent for one list item\n      <div className=\"Accordion\">\n        <h2>Accordion Component</h2>\n        {/* Map over the sections and create the list items*/}\n        <ul className=\"section-list\">\n          {sections.map((section, index) =>\n            this.renderSectionContent(section, index, activeIndex)\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\nimport HelloWorld from \"./HelloWorld\";\nimport Bomb from \"./Bomb\";\nimport RouletteGun from \"./RouletteGun\";\nimport Accordion from \"./Accordion\";\n\nfunction App() {\n  // create prop to pass down to Accordion component\n  // sections prop is an array of objects, each with two keys title and content, both strings\n  const sectionsProp = [\n    {\n      title: \"Section 1\",\n      content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\",\n    },\n    {\n      title: \"Section 2\",\n      content:\n        \"Cupiditate tenetur aliquam necessitatibus id distinctio quas nihil ipsam nisi modi!\",\n    },\n    {\n      title: \"Section 3\",\n      content:\n        \"Animi amet cumque sint cupiditate officia ab voluptatibus libero optio et?\",\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <HelloWorld />\n      <Bomb />\n      <RouletteGun bulletInChamber={8} />\n      <Accordion sections={sectionsProp} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}